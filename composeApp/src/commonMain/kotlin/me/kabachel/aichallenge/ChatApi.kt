package me.kabachel.aichallenge

import io.ktor.client.*
import io.ktor.client.call.*
import io.ktor.client.plugins.HttpTimeout
import io.ktor.client.plugins.contentnegotiation.*
import io.ktor.client.plugins.logging.*
import io.ktor.client.request.*
import io.ktor.http.*
import io.ktor.serialization.kotlinx.json.*
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.Json

interface ChatApi {
    suspend fun sendChatRequest(apiKey: String, request: ChatRequest): ChatResponse
}

@Serializable
data class ChatMessage(
    val role: String,
    val content: String
)

@Serializable
data class ChatRequest(
    val model: String,
    val messages: List<ChatMessage>
)

@Serializable
data class ChatResponse(
    val id: String? = null,
    val choices: List<Choice>? = null,
    val type: String? = null,
    val content: String? = null,
    val language: String? = null,
    val timestamp: String? = null,
    val confidence: Double? = null
)

@Serializable
data class Choice(
    val index: Int,
    val message: ChatMessage
)

@Serializable
data class AgentPayload(
    val type: String,
    val content: String,
    val language: String? = null,
    val timestamp: String? = null,
    val confidence: Double? = null
)

class ChatGptApi : ChatApi {
    private val client = HttpClient {
        install(ContentNegotiation) {
            json(Json { ignoreUnknownKeys = true })
        }
        install(HttpTimeout) {
            requestTimeoutMillis = 30_000
            connectTimeoutMillis = 30_000
            socketTimeoutMillis = 30_000
        }
        install(Logging) {
            level = LogLevel.ALL
            logger = object : Logger {
                override fun log(message: String) = println(message)
            }
        }
    }

    override suspend fun sendChatRequest(apiKey: String, request: ChatRequest): ChatResponse {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π system prompt, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö
        val systemPrompt = """
            –¢—ã ‚Äî –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –¥–∏–∞–ª–æ–≥–æ–≤.

            üîπ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø—Ä–æ—Å–∏—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–ø—Ä–æ–≤–µ–¥–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ¬ª, ¬´interview¬ª, ¬´—Ö–æ—á—É –ø—Ä–æ–π—Ç–∏ –∏–Ω—Ç–µ—Ä–≤—å—é¬ª), –¥–µ–π—Å—Ç–≤—É–π –∫–∞–∫ –æ–ø—ã—Ç–Ω—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä –∏ —Å–ª–µ–¥—É–π —ç—Ç–æ–º—É –ø–ª–∞–Ω—É:
            1. –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–æ—Å—å ‚Äî –Ω–∞—á–Ω–∏ —Å –≤–æ–ø—Ä–æ—Å–∞, –Ω–∞ –∫–∞–∫—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø—Ä–æ–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ (–ø—Ä–µ–¥–ª–æ–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã: Frontend, Backend, Mobile, Data Science, DevOps).
            2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–ª –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–≤–µ—Ç–∏–ª ¬´–¥–∞¬ª, ¬´–≥–æ—Ç–æ–≤¬ª, ¬´–ø–æ–µ—Ö–∞–ª–∏¬ª), –Ω–µ –Ω–∞—á–∏–Ω–∞–π –∑–∞–Ω–æ–≤–æ –∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –≤–≤–æ–¥–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –ø–µ—Ä–≤–æ–º—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –≤–æ–ø—Ä–æ—Å—É.
            3. –ó–∞–¥–∞–≤–∞–π 3‚Äì5 –≤–æ–ø—Ä–æ—Å–æ–≤ —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µ (–æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∫ —Å–ª–æ–∂–Ω–æ–º—É). –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—Ç–≤–µ—Ç, –∫—Ä–∞—Ç–∫–æ –æ—Ü–µ–Ω–∏ –µ–≥–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É.
            4. –ù–µ –∑–∞–≤–µ—Ä—à–∏ –∏–Ω—Ç–µ—Ä–≤—å—é, –ø–æ–∫–∞ –Ω–µ –∑–∞–¥–∞–ª –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. –ü–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–¥–∞–π –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É.
            5. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã, –æ—Ü–µ–Ω–∏ —É—Ä–æ–≤–µ–Ω—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ (Junior, Middle, Senior), –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–∏–º–µ—Ä–Ω—É—é –∑–∞—Ä–ø–ª–∞—Ç—É –∏ –¥–∞–π —Å–æ–≤–µ—Ç.
            6. –ó–∞–≤–µ—Ä—à–∏ —Ñ—Ä–∞–∑–æ–π ¬´–ò–Ω—Ç–µ—Ä–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ¬ª. –í—Å–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π –≤ –æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ JSON:
            {
              "type": "String",        // —Ç–µ–º–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏–ª–∏ —Ç–∏–ø (–Ω–∞–ø—Ä–∏–º–µ—Ä: chat, interview, feedback, question, travel, code)
              "content": "String",     // –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ (–≤–∫–ª—é—á–∞—è –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–Ω—Ç–µ—Ä–≤—å—é)
              "language": "String",    // —è–∑—ã–∫ –æ—Ç–≤–µ—Ç–∞
              "confidence": Number       // –æ—Ç 0 –¥–æ 1 —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
            }
            –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Å–∫–æ–ª—å–∫–æ JSON-–æ–±—ä–µ–∫—Ç–æ–≤, —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω JSON —Å –∫–ª—é—á–æ–º content, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –∏–Ω—Ç–µ—Ä–≤—å—é.

            üîπ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∞–∂–µ—Ç —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ ¬´–æ—Å—Ç–∞–Ω–æ–≤–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ¬ª, ¬´—Ö–≤–∞—Ç–∏—Ç¬ª, ¬´–ø—Ä–µ–∫—Ä–∞—Ç–∏¬ª –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é ‚Äî –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∏ –ø—Ä–æ—Ü–µ—Å—Å, –≤—ã–¥–∞–π —Ç–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON (–∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ) –∏ –¥–æ–±–∞–≤—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —á—Ç–æ –∏–Ω—Ç–µ—Ä–≤—å—é –±—ã–ª–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

            üîπ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á—Ç–æ-—Ç–æ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º–∏, –Ω–æ –Ω–µ –ø—Ä–æ—Å–∏—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–≤—å—é ‚Äî –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏ –º—è–≥–∫–æ –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ.

            üîπ –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –≤–µ–¥–∏ —Å–µ–±—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –æ—Ç–≤–µ—á–∞–π –≤ JSON-—Ñ–æ—Ä–º–∞—Ç–µ:
            {
              "type": "String",        // —Ç–µ–º–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
              "content": "String",     // –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
              "language": "String",    // —è–∑—ã–∫ –æ—Ç–≤–µ—Ç–∞
              "confidence": Number      // –æ—Ç 0 –¥–æ 1 —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
            }
            –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ–∫—Å—Ç –≤–Ω–µ JSON. –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω JSON-–æ–±—ä–µ–∫—Ç.
        """.trimIndent()

        val modifiedMessages = buildList {
            add(ChatMessage(role = "system", content = systemPrompt))
            addAll(request.messages)
        }

        val modifiedRequest = request.copy(messages = modifiedMessages)

        return client.post("https://llm.api.cloud.yandex.net/v1/chat/completions") {
            header(HttpHeaders.Authorization, "Bearer $apiKey")
            contentType(ContentType.Application.Json)
            setBody(modifiedRequest)
            parameter("max_tokens", 800)
        }.body()
    }
}
